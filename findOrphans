#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

Script to find unused class names in a Flex Project

OPTIONS:
   -h      Show this message
   -f      Flex Home.  Must be Flex 4.1 or higher due to need for swfdump (required)
   -l      List of source folders (comma delimited: "/firstSource,/secondSource") (required)
   -s      Path(s) to the SWF (before OR after build) (comma delimited: "/firstSWF,/secondSWF") (required)
   -o      Output Directory Root (required)

EOF
}

FLEXHOME=
SOURCEFOLDERS=
SWFPATH=
OUTPUTROOT=

while getopts “hf:l:s:o:” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         f)
             FLEXHOME=$OPTARG
             ;;
         l)
             SOURCEFOLDERS=$OPTARG
             ;;
         s)
             SWFPATH=$OPTARG
             ;;
         o)
             OUTPUTROOT=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [[ -z $FLEXHOME ]] || [[ -z $OUTPUTROOT ]] || [[ -z $SWFPATH ]] || [[ -z $SOURCEFOLDERS ]]
then
	echo "Missing Variable"
     usage
     exit 1
fi

if [ ! -d "$FLEXHOME" ]; then
	echo "Directory ($FLEXHOME) does not exist"
	exit
fi

if [ ! -d "$OUTPUTROOT" ]; then
	mkdir -p $OUTPUTROOT
fi

rm -f asFilePaths
rm -f mxmlFilePaths
rm -f validFiles
rm -f unusedNames
rm -f unusedValidFiles
rm -f possibleCodeBehind

swfArray=(`echo ${SWFPATH//,/ }`)

echo "Disassembling SWF(s)..."
swfdumpPath="$FLEXHOME/lib/swfdump.jar"

for swf in "${swfArray[@]}"
do
	echo "Dumping $swf"
	java -ea -Dapplication.home="$FLEXHOME" -Xms32m -Xmx384m -jar "$swfdumpPath" -abc "$swf" >> projectSwfDump
done

echo "Searching for files in source directories..."
declare -a sourceDirectoryArray
sourceDirectoryArray=(`echo ${SOURCEFOLDERS//,/ }`)

for sourceDirectory in "${sourceDirectoryArray[@]}"
do
	if [ -d "$sourceDirectory" ]; then
		find "$sourceDirectory" -type f -name "*.as" >> asFilePaths
		find "$sourceDirectory" -type f -name "*.mxml" >> mxmlFilePaths
	else
		echo "Source directory does not exist: $sourceDirectory"
		exit 1
	fi
done

echo "Searching for code-behind and listing Actionscript classes..."
for filePath in $(<asFilePaths) ;
do
	packageString=$(grep "package[[:space:]]\{0,1\}\(.\{1,\}\(\..\{1,\}\).\{1,\}\)\{0,1\}" $filePath)
	
	if [[ -z $packageString ]]; then
		# There is no package definition so this is not a class.  Must be code-behind!
		echo $filePath >> possibleCodeBehind
		echo "[CODE-BEHIND] $filePath"
	else
		echo $filePath >> validFiles
	fi
done

echo "Listing MXML classes..."
for filePath in $(<mxmlFilePaths) ;
do
	echo $filePath >> validFiles
done

echo "Searching for orphaned classes..."
tput sc
echo -n ""

for validFile in $(<validFiles) ;
do
	pathSegment=$(expr "$validFile" : ".*/src/main/flex/\(.*\)\..*")
	fullyQualifiedClassName=${pathSegment//\//.}

	tput rc
	tput el
	tput sc
  	echo -n " ORPHAN TEST    : $fullyQualifiedClassName"
	
	dumpSearchResult=( $(grep $fullyQualifiedClassName projectSwfDump) )
	
	if [ ${#dumpSearchResult[@]} == 0 ]; then
		echo $fullyQualifiedClassName >> unusedNames
		echo $validFile >> unusedValidFiles
		
		tput rc
		tput el
		echo "[ORPHANED CLASS] $fullyQualifiedClassName"
		tput sc
	fi
done

tput rc
tput el
echo "Orphan Search Complete"

echo ""

echo "Creating output directory..."
outputDirectory="$OUTPUTROOT/$(date +%Y%m%d-%H%M%S)"
mkdir -p $outputDirectory

echo "Formatting output..."
if [ -e "unusedNames" ]; then
	sort unusedNames > $outputDirectory/UnusedClasses
fi

if [ -e "unusedValidFiles" ]; then
	sort unusedValidFiles > $outputDirectory/UnusedClassFiles
fi

if [ -e "possibleCodeBehind" ]; then
	sort possibleCodeBehind > $outputDirectory/PossibleCodeBehind
fi

echo "Results:"
if [ -e "$outputDirectory/UnusedClasses" ]; then
	echo $(cat $outputDirectory/UnusedClasses | wc -l)" Unused Classes"
else
	echo "No Unused Classes Detected!"
fi

if [ -e "$outputDirectory/PossibleCodeBehind" ]; then
	echo $(cat $outputDirectory/PossibleCodeBehind | wc -l)" Possible Code-Behind Instances"
else
	echo "No Possible Code-Behind Instances Detected!"
fi

# Cleanup
rm -f projectSwfDump
rm -f asFilePaths
rm -f mxmlFilePaths
rm -f validFiles
rm -f unusedNames
rm -f unusedValidFiles
rm -f possibleCodeBehind
